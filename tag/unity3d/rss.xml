<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>友人帐🎴 • Posts by &#34;unity3d&#34; tag</title>
        <link>https://isviolet.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 18 May 2021 20:55:34 +0800</pubDate>
        <lastBuildDate>Tue, 18 May 2021 20:55:34 +0800</lastBuildDate>
        <category>随文</category>
        <category>Android</category>
        <category>JAVAWEB</category>
        <category>unity3D</category>
        <category>springboot</category>
        <category>HTTP</category>
        <category>bug</category>
        <category>linux</category>
        <category>python</category>
        <category>爬虫</category>
        <category>栈</category>
        <category>危机合约</category>
        <category>明日方舟</category>
        <category>游戏</category>
        <category>线性表</category>
        <category>JAVA</category>
        <category>JAVA开发手册</category>
        <category>数据库</category>
        <item>
            <guid isPermalink="true">https://isviolet.github.io/p/a9767c1b.html</guid>
            <title>坦克大战第一期</title>
            <link>https://isviolet.github.io/p/a9767c1b.html</link>
            <category>unity3D</category>
            <pubDate>Tue, 18 May 2021 20:55:34 +0800</pubDate>
            <description><![CDATA[ &lt;h4 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;最近需要学习 Unity3D，看了些入门的模型材料制作，我试了试，真的就是试试就逝世，有点难啊。所以我果断跳过这一章，直接白嫖网上的资源，开始制作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;特别提醒&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特别提醒&#34;&gt;#&lt;/a&gt; 特别提醒：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;作者使用的是当时最新的版本，如果有同学（可能有人会看吧）前来考古，如果出现问题，本人概不负责 (ಥ_ಥ) ，自己百度。&lt;/li&gt;
&lt;li&gt;本人接下来所有教程非本人原创，我是看了 bilibili 上的 siki 学院学习的，大家可以支持下原作者。&lt;/li&gt;
&lt;li&gt;时间 2021 年 5 月 19 日，很遗憾本文的图片失效了。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;1工程的创建及其素材的导入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1工程的创建及其素材的导入&#34;&gt;#&lt;/a&gt; 1. 工程的创建及其素材的导入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;打开你自己的 unity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;就像这样，双击（么么哒？）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来你会看到如下界面，新建一个 2D 工程，命名为 Tank，大功告成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择适合自己的编辑页面，我的配置如下（右上角 layout 和工程鼠标右键）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来就是导入素材了&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;老师的资源地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUVER2kxYWwyaWlDbjh6c1h5R0lNYVE=&#34;&gt;https://pan.baidu.com/s/1EDGi1al2iiCn8zsXyGIMaQ&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;密码是：ficl&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;将此文件拖到工程栏下即可进行导入资源&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2场景搭建和素材处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2场景搭建和素材处理&#34;&gt;#&lt;/a&gt; 2. 场景搭建和素材处理&lt;/h2&gt;
&lt;h3 id=&#34;场景的搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#场景的搭建&#34;&gt;#&lt;/a&gt; 场景的搭建&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;设置 MainCamera 的属性，改善用户体验的主要视角&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;素材的处理图片的切割就不说明了~&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#素材的处理图片的切割就不说明了~&#34;&gt;#&lt;/a&gt; 素材的处理（图片的切割就不说明了～）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2D 图片的属性（制作 2D 游戏需要设置成 2DUI 类型）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意保存场景名，之后还要创建一个场景，注意保存，不然就都没有了 o (´^｀) o&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个文件夹 “Scene”，用于保存场景文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3预制体和动画的制作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3预制体和动画的制作&#34;&gt;#&lt;/a&gt; 3. 预制体和动画的制作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;剩下的 shield 和 river 用同样的方法制作出来&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4控制玩家的移动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4控制玩家的移动&#34;&gt;#&lt;/a&gt; 4. 控制玩家的移动&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;点击场景中的 Player，在右侧点击 Add Component，添加 new script，命名为 Player。然后使用 vs 打开后输入如下代码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;figcaption data-lang=&#34;C#&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 在 update () 方法中输入代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 控制横向的移动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;float&lt;/span&gt;&lt;/span&gt; h &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Input&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;GetAxisRaw&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Horizontal&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;transform&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Translate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Vector3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;righthmoveSpeed&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;Time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;deltaTime&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;Space&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;World&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 控制垂直方向的移动 float v = Input.GetAxisRaw (Vertical);transform.Translate (Vector3.upvmoveSpeed*Time.deltaTime,Space.World);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 别忘了在类里设置移动速度的值 private float moveSpeed = 3;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;走到这一步，试试点击上方的运行按钮，然后你就可以在 Game 下看到坦克可以由你控制移动啦&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://isviolet.github.io/p/996090c3.html</guid>
            <title>坦克大战第二期</title>
            <link>https://isviolet.github.io/p/996090c3.html</link>
            <category>unity3D</category>
            <pubDate>Tue, 18 May 2021 20:47:49 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;2D 游戏坦克大战制作第二期如期而至&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前情回顾&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前情回顾&#34;&gt;#&lt;/a&gt; 前情回顾&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;4. 控制玩家的移动&lt;br /&gt;
点击场景中的 Player，在右侧点击 Add Component，添加 new script，命名为 Player。然后使用 vs 打开后输入如下代码&lt;/p&gt;
&lt;p&gt;... ...&lt;/p&gt;
&lt;p&gt;接下来你会看到坦克可以移动了，但是他移动时方向竟然没变化 Σ(ﾟдﾟlll)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;控制图片的移动切换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制图片的移动切换&#34;&gt;#&lt;/a&gt; 控制图片的移动切换&lt;/h2&gt;
&lt;p&gt;没有对 Player 进行图片的设置当然图片也就不会改变了，你切好后的多个图片，需要通过自己的小手在 player 脚本里写好所需要切换图片的代码才行。&lt;/p&gt;
&lt;p&gt;下面简单说明下如何进行编写☟&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过改变该图片的转向&lt;/li&gt;
&lt;li&gt;改变不同转向图片达到转向的效果&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;改变图片的转向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#改变图片的转向&#34;&gt;#&lt;/a&gt; 改变图片的转向&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;思路：坦克大战本身是 2D 游戏，但是他依然是有 z 轴的，所以可以改变 z 轴的旋转角度改变图片的显示。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;①渲染器引用&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;//设置精灵渲染器 
private SpriteRenderer sr; 

//在awake方法中添加语句
private void awake()&amp;#123;//☆脚本下没有awake方法手动添加
    //得到使用该脚本的预制体的精灵渲染器
    sr = GetComponent();
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;②根据 h 和 v 的值，确定图片的转向&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c#&#34;&gt;//用于存储上下左右四张图片
private Sprite[] tankSprite; 

//h是横轴方向，h=1代表向右,h=-1代表向左
float h = Input.GetAxisRaw(&amp;quot;Horizontal&amp;quot;);
transform.Translate(Vector3.right*h*moveSpeed*Time.deltaTime,Space.World);
if(h&amp;lt;0)&amp;#123;
    sr.sprite = tankSprite[3];//这里的tankSprite[3]是方向向右的图片
&amp;#125;else if()&amp;#123;
    sr.sprite = tankSprite[4];//同理
&amp;#125;

//v代表垂直方向，与h是相同的操作。
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;现在试试，发现坦克已经可以根据方向键进行方向的变化了。&lt;/p&gt;
&lt;p&gt;to be continue&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://isviolet.github.io/p/1809fb3.html</guid>
            <title>Unity3D介绍</title>
            <link>https://isviolet.github.io/p/1809fb3.html</link>
            <category>unity3D</category>
            <pubDate>Tue, 18 May 2021 20:40:58 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;unity3d定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#unity3d定义&#34;&gt;#&lt;/a&gt; unity3D 定义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;用于轻松创建游戏和三维互动内容的开发工具，是一个专业游戏引擎。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;游戏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#游戏&#34;&gt;#&lt;/a&gt; 游戏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在移动平台，Unity 几乎成为 3D 游戏开发的标准工具，使用他开发的游戏数不胜数。&lt;/li&gt;
&lt;li&gt;2D 游戏：视角完全锁定，二维坐标（如 2048 游戏） &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8yMDQ4LzEzMzgzNTExP2ZyPWFsYWRkaW4=&#34;&gt;https://baike.baidu.com/item/2048/13383511?fr=aladdin&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;3D 游戏：可以任意变换视角，无锁定。三维坐标（如 CS）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;虚拟现实&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟现实&#34;&gt;#&lt;/a&gt; 虚拟现实&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Virtual Reality&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当今世界前沿科技之一&lt;/p&gt;
&lt;p&gt;利用电脑模拟产生一个三维空间的虚拟世界，可以模拟视觉、听觉、触觉等感官的模拟。使用者通过各种输入设备与虚拟环境中的事物进行交互，有一种身临其境的感觉。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;VR 设备&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;移动端头显设备
&lt;ul&gt;
&lt;li&gt;手机放入即可，便宜方便，但受硬件制约，体验不佳&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;外接式头戴设备
&lt;ul&gt;
&lt;li&gt;连接至 PC，能捕捉肢体动作，有更好性能，但价格过高，硬件要求高&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一体式头戴设备
&lt;ul&gt;
&lt;li&gt;具备独立的运算，不受设备限制，但目前还不成熟，产品偏少。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Xbox One + Kinect、zSpace ......&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VR 应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;军工、科研、游戏、视频、教育、旅游、家装、虚拟试驾、房地产项目展示 ......&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增强现实 Augmented Reality&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过电脑技术，将虚拟信息应用到真实世界，真实的环境和虚拟的物体实时的叠加到了同一个画面或空间同时存在。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AR 与 VR 的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VR 看到的场景和人物都是假的，进入虚拟世界。&lt;br /&gt;
AR 看到的是现实世界和计算机虚拟信息的叠加。&lt;/p&gt;
&lt;h2 id=&#34;游戏引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#游戏引擎&#34;&gt;#&lt;/a&gt; 游戏引擎&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;程序的框架，一款游戏最最核心的代码&lt;/li&gt;
&lt;li&gt;包含以下系统：渲染引擎、物理引擎、碰撞检测系统、音效、脚本引擎、动画系统、人工智能、网络引擎、以及场景管理。&lt;/li&gt;
&lt;li&gt;使用游戏引擎，开发者可以重用已有的核心技术，将精力集中在游戏逻辑和设计上，从而简单快速的创建游戏。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;unity3d特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#unity3d特点&#34;&gt;#&lt;/a&gt; Unity3D 特点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;简单易用（虚幻 4 相对来说对新手不太友好）&lt;/li&gt;
&lt;li&gt;开发效率高&lt;/li&gt;
&lt;li&gt;价格便宜&lt;/li&gt;
&lt;li&gt;新手居多&lt;/li&gt;
&lt;li&gt;23 个平台间自由迁移，出色的部署，完全的覆盖发布平台包括：ios、Android、Windows Phone、Windows、Web、微软 Xbox360、索尼 PS3、任天堂 Wii 等&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;游戏公司大致分工&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#游戏公司大致分工&#34;&gt;#&lt;/a&gt; 游戏公司大致分工&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;策划&lt;/li&gt;
&lt;li&gt;美工&lt;/li&gt;
&lt;li&gt;软件工程师&lt;/li&gt;
&lt;li&gt;测试工程师&lt;/li&gt;
&lt;li&gt;客服等&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
