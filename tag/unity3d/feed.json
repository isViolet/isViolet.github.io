{
    "version": "https://jsonfeed.org/version/1",
    "title": "友人帐🎴 • All posts by \"unity3d\" tag",
    "description": "",
    "home_page_url": "https://isviolet.github.io",
    "items": [
        {
            "id": "https://isviolet.github.io/p/a9767c1b.html",
            "url": "https://isviolet.github.io/p/a9767c1b.html",
            "title": "坦克大战第一期",
            "date_published": "2021-05-18T12:55:34.202Z",
            "content_html": "<h4 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言：</h4>\n<blockquote>\n<p>最近需要学习 Unity3D，看了些入门的模型材料制作，我试了试，真的就是试试就逝世，有点难啊。所以我果断跳过这一章，直接白嫖网上的资源，开始制作。</p>\n</blockquote>\n<h4 id=\"特别提醒\"><a class=\"anchor\" href=\"#特别提醒\">#</a> 特别提醒：</h4>\n<ul>\n<li>作者使用的是当时最新的版本，如果有同学（可能有人会看吧）前来考古，如果出现问题，本人概不负责 (ಥ_ಥ) ，自己百度。</li>\n<li>本人接下来所有教程非本人原创，我是看了 bilibili 上的 siki 学院学习的，大家可以支持下原作者。</li>\n<li>时间 2021 年 5 月 19 日，很遗憾本文的图片失效了。</li>\n</ul>\n<hr />\n<h2 id=\"1工程的创建及其素材的导入\"><a class=\"anchor\" href=\"#1工程的创建及其素材的导入\">#</a> 1. 工程的创建及其素材的导入</h2>\n<ul>\n<li>\n<p>打开你自己的 unity</p>\n</li>\n<li>\n<p>就像这样，双击（么么哒？）</p>\n</li>\n<li>\n<p>接下来你会看到如下界面，新建一个 2D 工程，命名为 Tank，大功告成。</p>\n</li>\n<li>\n<p>选择适合自己的编辑页面，我的配置如下（右上角 layout 和工程鼠标右键）</p>\n</li>\n<li>\n<p>接下来就是导入素材了</p>\n</li>\n</ul>\n<blockquote>\n<p>老师的资源地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUVER2kxYWwyaWlDbjh6c1h5R0lNYVE=\">https://pan.baidu.com/s/1EDGi1al2iiCn8zsXyGIMaQ</span></p>\n<p>密码是：ficl</p>\n</blockquote>\n<ul>\n<li>将此文件拖到工程栏下即可进行导入资源</li>\n</ul>\n<h2 id=\"2场景搭建和素材处理\"><a class=\"anchor\" href=\"#2场景搭建和素材处理\">#</a> 2. 场景搭建和素材处理</h2>\n<h3 id=\"场景的搭建\"><a class=\"anchor\" href=\"#场景的搭建\">#</a> 场景的搭建</h3>\n<ul>\n<li>设置 MainCamera 的属性，改善用户体验的主要视角</li>\n</ul>\n<h3 id=\"素材的处理图片的切割就不说明了~\"><a class=\"anchor\" href=\"#素材的处理图片的切割就不说明了~\">#</a> 素材的处理（图片的切割就不说明了～）</h3>\n<ul>\n<li>\n<p>2D 图片的属性（制作 2D 游戏需要设置成 2DUI 类型）</p>\n</li>\n<li>\n<p>注意保存场景名，之后还要创建一个场景，注意保存，不然就都没有了 o (´^｀) o</p>\n</li>\n<li>\n<p>创建一个文件夹 “Scene”，用于保存场景文件</p>\n</li>\n</ul>\n<h2 id=\"3预制体和动画的制作\"><a class=\"anchor\" href=\"#3预制体和动画的制作\">#</a> 3. 预制体和动画的制作</h2>\n<ul>\n<li>剩下的 shield 和 river 用同样的方法制作出来</li>\n</ul>\n<h2 id=\"4控制玩家的移动\"><a class=\"anchor\" href=\"#4控制玩家的移动\">#</a> 4. 控制玩家的移动</h2>\n<ul>\n<li>点击场景中的 Player，在右侧点击 Add Component，添加 new script，命名为 Player。然后使用 vs 打开后输入如下代码</li>\n</ul>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 在 update () 方法中输入代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 控制横向的移动</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> h <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxisRaw</span><span class=\"token punctuation\">(</span>Horizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">Translate</span><span class=\"token punctuation\">(</span>Vector3<span class=\"token punctuation\">.</span>righthmoveSpeed<span class=\"token operator\">*</span>Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">,</span>Space<span class=\"token punctuation\">.</span>World<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 控制垂直方向的移动 float v = Input.GetAxisRaw (Vertical);transform.Translate (Vector3.upvmoveSpeed*Time.deltaTime,Space.World);</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 别忘了在类里设置移动速度的值 private float moveSpeed = 3;</span></pre></td></tr></table></figure><ul>\n<li>走到这一步，试试点击上方的运行按钮，然后你就可以在 Game 下看到坦克可以由你控制移动啦</li>\n</ul>\n",
            "tags": [
                "unity3D"
            ]
        },
        {
            "id": "https://isviolet.github.io/p/996090c3.html",
            "url": "https://isviolet.github.io/p/996090c3.html",
            "title": "坦克大战第二期",
            "date_published": "2021-05-18T12:47:49.740Z",
            "content_html": "<blockquote>\n<p>2D 游戏坦克大战制作第二期如期而至</p>\n</blockquote>\n<h2 id=\"前情回顾\"><a class=\"anchor\" href=\"#前情回顾\">#</a> 前情回顾</h2>\n<blockquote>\n<p>4. 控制玩家的移动<br />\n点击场景中的 Player，在右侧点击 Add Component，添加 new script，命名为 Player。然后使用 vs 打开后输入如下代码</p>\n<p>... ...</p>\n<p>接下来你会看到坦克可以移动了，但是他移动时方向竟然没变化 Σ(ﾟдﾟlll)</p>\n</blockquote>\n<hr />\n<h2 id=\"控制图片的移动切换\"><a class=\"anchor\" href=\"#控制图片的移动切换\">#</a> 控制图片的移动切换</h2>\n<p>没有对 Player 进行图片的设置当然图片也就不会改变了，你切好后的多个图片，需要通过自己的小手在 player 脚本里写好所需要切换图片的代码才行。</p>\n<p>下面简单说明下如何进行编写☟</p>\n<ul>\n<li>通过改变该图片的转向</li>\n<li>改变不同转向图片达到转向的效果</li>\n</ul>\n<h3 id=\"改变图片的转向\"><a class=\"anchor\" href=\"#改变图片的转向\">#</a> 改变图片的转向</h3>\n<p><strong>思路：坦克大战本身是 2D 游戏，但是他依然是有 z 轴的，所以可以改变 z 轴的旋转角度改变图片的显示。</strong></p>\n<p>①渲染器引用</p>\n<pre><code class=\"language-c#\">//设置精灵渲染器 \nprivate SpriteRenderer sr; \n\n//在awake方法中添加语句\nprivate void awake()&#123;//☆脚本下没有awake方法手动添加\n    //得到使用该脚本的预制体的精灵渲染器\n    sr = GetComponent();\n&#125;\n</code></pre>\n<p>②根据 h 和 v 的值，确定图片的转向</p>\n<pre><code class=\"language-c#\">//用于存储上下左右四张图片\nprivate Sprite[] tankSprite; \n\n//h是横轴方向，h=1代表向右,h=-1代表向左\nfloat h = Input.GetAxisRaw(&quot;Horizontal&quot;);\ntransform.Translate(Vector3.right*h*moveSpeed*Time.deltaTime,Space.World);\nif(h&lt;0)&#123;\n    sr.sprite = tankSprite[3];//这里的tankSprite[3]是方向向右的图片\n&#125;else if()&#123;\n    sr.sprite = tankSprite[4];//同理\n&#125;\n\n//v代表垂直方向，与h是相同的操作。\n...\n</code></pre>\n<p>现在试试，发现坦克已经可以根据方向键进行方向的变化了。</p>\n<p>to be continue</p>\n",
            "tags": [
                "unity3D"
            ]
        },
        {
            "id": "https://isviolet.github.io/p/1809fb3.html",
            "url": "https://isviolet.github.io/p/1809fb3.html",
            "title": "Unity3D介绍",
            "date_published": "2021-05-18T12:40:58.817Z",
            "content_html": "<h2 id=\"unity3d定义\"><a class=\"anchor\" href=\"#unity3d定义\">#</a> unity3D 定义</h2>\n<ul>\n<li>用于轻松创建游戏和三维互动内容的开发工具，是一个专业游戏引擎。</li>\n</ul>\n<h2 id=\"游戏\"><a class=\"anchor\" href=\"#游戏\">#</a> 游戏</h2>\n<ul>\n<li>在移动平台，Unity 几乎成为 3D 游戏开发的标准工具，使用他开发的游戏数不胜数。</li>\n<li>2D 游戏：视角完全锁定，二维坐标（如 2048 游戏） <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8yMDQ4LzEzMzgzNTExP2ZyPWFsYWRkaW4=\">https://baike.baidu.com/item/2048/13383511?fr=aladdin</span></li>\n<li>3D 游戏：可以任意变换视角，无锁定。三维坐标（如 CS）</li>\n</ul>\n<h2 id=\"虚拟现实\"><a class=\"anchor\" href=\"#虚拟现实\">#</a> 虚拟现实</h2>\n<ul>\n<li>Virtual Reality</li>\n</ul>\n<p>当今世界前沿科技之一</p>\n<p>利用电脑模拟产生一个三维空间的虚拟世界，可以模拟视觉、听觉、触觉等感官的模拟。使用者通过各种输入设备与虚拟环境中的事物进行交互，有一种身临其境的感觉。</p>\n<ul>\n<li>\n<p>VR 设备</p>\n<ol>\n<li>移动端头显设备\n<ul>\n<li>手机放入即可，便宜方便，但受硬件制约，体验不佳</li>\n</ul>\n</li>\n<li>外接式头戴设备\n<ul>\n<li>连接至 PC，能捕捉肢体动作，有更好性能，但价格过高，硬件要求高</li>\n</ul>\n</li>\n<li>一体式头戴设备\n<ul>\n<li>具备独立的运算，不受设备限制，但目前还不成熟，产品偏少。</li>\n</ul>\n</li>\n<li>Xbox One + Kinect、zSpace ......</li>\n</ol>\n</li>\n<li>\n<p>VR 应用</p>\n<ul>\n<li>军工、科研、游戏、视频、教育、旅游、家装、虚拟试驾、房地产项目展示 ......</li>\n</ul>\n</li>\n<li>\n<p>增强现实 Augmented Reality</p>\n</li>\n</ul>\n<p>通过电脑技术，将虚拟信息应用到真实世界，真实的环境和虚拟的物体实时的叠加到了同一个画面或空间同时存在。</p>\n<ul>\n<li>AR 与 VR 的区别</li>\n</ul>\n<p>VR 看到的场景和人物都是假的，进入虚拟世界。<br />\nAR 看到的是现实世界和计算机虚拟信息的叠加。</p>\n<h2 id=\"游戏引擎\"><a class=\"anchor\" href=\"#游戏引擎\">#</a> 游戏引擎</h2>\n<ul>\n<li>程序的框架，一款游戏最最核心的代码</li>\n<li>包含以下系统：渲染引擎、物理引擎、碰撞检测系统、音效、脚本引擎、动画系统、人工智能、网络引擎、以及场景管理。</li>\n<li>使用游戏引擎，开发者可以重用已有的核心技术，将精力集中在游戏逻辑和设计上，从而简单快速的创建游戏。</li>\n</ul>\n<h2 id=\"unity3d特点\"><a class=\"anchor\" href=\"#unity3d特点\">#</a> Unity3D 特点</h2>\n<ul>\n<li>简单易用（虚幻 4 相对来说对新手不太友好）</li>\n<li>开发效率高</li>\n<li>价格便宜</li>\n<li>新手居多</li>\n<li>23 个平台间自由迁移，出色的部署，完全的覆盖发布平台包括：ios、Android、Windows Phone、Windows、Web、微软 Xbox360、索尼 PS3、任天堂 Wii 等</li>\n</ul>\n<h2 id=\"游戏公司大致分工\"><a class=\"anchor\" href=\"#游戏公司大致分工\">#</a> 游戏公司大致分工</h2>\n<ul>\n<li>策划</li>\n<li>美工</li>\n<li>软件工程师</li>\n<li>测试工程师</li>\n<li>客服等</li>\n</ul>\n",
            "tags": [
                "unity3D"
            ]
        }
    ]
}