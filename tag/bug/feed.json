{
    "version": "https://jsonfeed.org/version/1",
    "title": "友人帐🎴 • All posts by \"bug\" tag",
    "description": "",
    "home_page_url": "https://isviolet.github.io",
    "items": [
        {
            "id": "https://isviolet.github.io/p/5944b1b6.html",
            "url": "https://isviolet.github.io/p/5944b1b6.html",
            "title": "连接MySQL的10060错误Can't connect to MySQL server on '...'(10060)",
            "date_published": "2021-05-18T13:14:44.222Z",
            "content_html": "<blockquote>\n<p>使用 MySQL 的图形界面管理工具 Navicat for MySQL 连接 Mysql 数据库时提示错误：Can't connect to MySQL server (10060)</p>\n</blockquote>\n<p><img data-src=\"https://i.loli.net/2021/05/18/FD7pJtGs5BAPrCe.png\" alt=\"file\" /></p>\n<h2 id=\"出现该问题可能的原因\"><a class=\"anchor\" href=\"#出现该问题可能的原因\">#</a> 【出现该问题可能的原因：】</h2>\n<ol>\n<li>网络不通；</li>\n<li>服务未启动；</li>\n<li>防火墙未关闭；</li>\n<li>服务器上防火墙端口未开放；</li>\n<li>端口未被监听；</li>\n<li>权限不足。</li>\n</ol>\n<h2 id=\"解决办法\"><a class=\"anchor\" href=\"#解决办法\">#</a> 【解决办法：】</h2>\n<ol>\n<li>\n<p>自行百度配置网络</p>\n</li>\n<li>\n<p>启动服务</p>\n<pre><code>#在安装目录下\n[root@VM_0_5_centos sbin]# pwd\n/software/mysql-5.5.32/sbin\n[root@VM_0_5_centos sbin]# ./mysqld start\nStarting MySQL SUCCESS!\n</code></pre>\n</li>\n<li>\n<p>关闭防火墙，不会的点这里<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbW16cy9wLzg0MDYyMDguaHRtbCNfbGFiZWww\"> Linux 常用命令大全（非常全！！！）</span></p>\n</li>\n<li>\n<p>在自己购买的服务器上将 MySQL 使用的 3306 端口开放，如果是在本地搭建的虚拟机，记得一定要满足第 1 条，将网络接通外网。</p>\n</li>\n<li>\n<p>添加监听的端口：</p>\n<pre><code>添加需要监听的端口\n/sbin/iptables -I INPUT -p tcp --dport 3306 -j ACCEPT\n\n保存设置/etc/init.d/iptables save\n查看状态/etc/init.d/iptables status\n</code></pre>\n</li>\n<li>\n<p>权限不足 权限问题，参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbW16cy9wLzkwNDI5OTcuaHRtbA==\">navicat 连接不上 Linux 服务器上的 MySQL</span></p>\n</li>\n</ol>\n",
            "tags": [
                "bug",
                "数据库"
            ]
        },
        {
            "id": "https://isviolet.github.io/p/f1f34cbd.html",
            "url": "https://isviolet.github.io/p/f1f34cbd.html",
            "title": "IDEA错误 找不到或无法加载主类",
            "date_published": "2021-05-18T13:11:18.867Z",
            "content_html": "<h1 id=\"问题描述\"><a class=\"anchor\" href=\"#问题描述\">#</a> 问题描述</h1>\n<blockquote>\n<p>IDEA 错误：找不到或无法加载主类 com.itmayiedu.springcloud.SpringcloudApplication</p>\n</blockquote>\n<h1 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<h2 id=\"1-打开顶部菜单run选择edit-configurations\"><a class=\"anchor\" href=\"#1-打开顶部菜单run选择edit-configurations\">#</a> 1. 打开顶部菜单 run, 选择 Edit configurations...</h2>\n<p><img data-src=\"https://i.loli.net/2021/05/18/SU6fXNeHiplaP3T.png\" alt=\"file\" /></p>\n<h2 id=\"2-引入主类包的位置\"><a class=\"anchor\" href=\"#2-引入主类包的位置\">#</a> 2. 引入主类包的位置</h2>\n<p><img data-src=\"https://i.loli.net/2021/05/18/abVoWTNqQG2dyw7.png\" alt=\"file\" /></p>\n",
            "tags": [
                "springboot",
                "bug"
            ]
        },
        {
            "id": "https://isviolet.github.io/p/1e18fa78.html",
            "url": "https://isviolet.github.io/p/1e18fa78.html",
            "title": "SQLException The server time zone value '�й���׼ʱ��' is unrecognized 解决办法",
            "date_published": "2021-05-18T13:10:01.205Z",
            "content_html": "<p><strong>mysql 版本为 8.0</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Exception</span> in thread <span class=\"token string\">\"main\"</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span>SQLException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">The</span> server time zone value <span class=\"token string\">'�й���׼ʱ��'</span> is unrecognized or represents more than one time <span class=\"token class-name\"><span class=\"token namespace\">zone<span class=\"token punctuation\">.</span></span> You</span> must configure either the server or <span class=\"token class-name\">JDBC</span> driver <span class=\"token punctuation\">(</span>via the <span class=\"token string\">'serverTimezone'</span> configuration property<span class=\"token punctuation\">)</span> <span class=\"token keyword\">to</span> <span class=\"token namespace\">use</span> a more specifc time zone value <span class=\"token keyword\">if</span> you want <span class=\"token keyword\">to</span> <span class=\"token namespace\">utilize</span> time zone support<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>SQLError</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSQLException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLError</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">129</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>SQLError</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSQLException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLError</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">97</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>SQLError</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSQLException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLError</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">89</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>SQLError</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSQLException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLError</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">63</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>SQLError</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSQLException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLError</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">73</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span>SQLExceptionsMapping</span><span class=\"token punctuation\">.</span><span class=\"token function\">translateException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLExceptionsMapping</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">76</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>ConnectionImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">createNewIO</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConnectionImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">836</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>ConnectionImpl</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>init<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConnectionImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">456</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>ConnectionImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConnectionImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">246</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>NonRegisteringDriver</span><span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NonRegisteringDriver</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">197</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>MysqlDataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MysqlDataSource</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">416</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>MysqlDataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MysqlDataSource</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>MysqlDataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MysqlDataSource</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">113</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>at test<span class=\"token punctuation\">.</span>jar_test<span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span>jar_test<span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">51</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>解决办法：连接数据库时：</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MysqlDataSource</span><span class=\"token punctuation\">)</span> dataSource<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token function\">setURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://127.0.0.1:3306/mysql1?characterEncoding=utf-8&amp;useSSL=true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>修改为：<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MysqlDataSource</span><span class=\"token punctuation\">)</span> dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc//127.0.0.1:3306/mysql1?serverTimezone=UTC&amp;useSSL=true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "bug",
                "数据库"
            ]
        },
        {
            "id": "https://isviolet.github.io/p/a7d5195f.html",
            "url": "https://isviolet.github.io/p/a7d5195f.html",
            "title": "Swagger-UI 提示Unable to infer base url",
            "date_published": "2021-05-18T13:08:27.876Z",
            "content_html": "<h1 id=\"错误信息为\"><a class=\"anchor\" href=\"#错误信息为\">#</a> 错误信息为：</h1>\n<blockquote>\n<p>Unable to infer base url. This is common when using dynamic servlet registration or when the API is behind an API Gateway. The base url is the root of where all the swagger resources are served. For e.g. if the api is available at <span class=\"exturl\" data-url=\"aHR0cDovL2V4YW1wbGUub3JnL2FwaS92Mi9hcGktZG9jcw==\">http://example.org/api/v2/api-docs</span> then the base url is <span class=\"exturl\" data-url=\"aHR0cDovL2V4YW1wbGUub3JnL2FwaS8=\">http://example.org/api/</span>. Please enter the location manually: <img data-src=\"https://i.loli.net/2021/05/18/8w4eyghRNtvfnjq.png\" alt=\"file\" /></p>\n</blockquote>\n<h1 id=\"解决方案\"><a class=\"anchor\" href=\"#解决方案\">#</a> 解决方案</h1>\n<ol>\n<li>版本问题：2.8 以后的版本很容易出现这类问题。</li>\n<li>在 application 启动类中未定义 @EnableSwagger2 注解</li>\n</ol>\n",
            "tags": [
                "springboot",
                "bug"
            ]
        },
        {
            "id": "https://isviolet.github.io/p/4d2c3dcc.html",
            "url": "https://isviolet.github.io/p/4d2c3dcc.html",
            "title": "linux运行jar、nohup ignoring input and redirecting stderr to stdout",
            "date_published": "2021-05-18T12:26:15.289Z",
            "content_html": "<h3 id=\"在linux服务器上运行jar文件时通常的方法是\"><a class=\"anchor\" href=\"#在linux服务器上运行jar文件时通常的方法是\">#</a> 在 linux 服务器上运行 Jar 文件时通常的方法是：</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ java -jar test.jar</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//这种方式特点是ssh窗口关闭时，程序中止运行.或者是运行时没法切出去执行其他任务</pre></td></tr></table></figure><h3 id=\"jar在后台运行的方法\"><a class=\"anchor\" href=\"#jar在后台运行的方法\">#</a> jar 在后台运行的方法：</h3>\n<h4 id=\"方法一\"><a class=\"anchor\" href=\"#方法一\">#</a> 方法一：</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">nohup</span> java -jar test.jar <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//nohup 意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//当用 <span class=\"token function\">nohup</span> 命令执行作业时，缺省情况下该作业的所有输出被重定向到nohup.out的文件中</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//除非另外指定了输出文件。</pre></td></tr></table></figure><h4 id=\"方法二\"><a class=\"anchor\" href=\"#方法二\">#</a> 方法二：</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">nohup</span> java -jar test.jar <span class=\"token operator\">></span> temp.txt <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//这种方法会把日志文件输入到你指定的文件中，没有则会自动创建</pre></td></tr></table></figure><h3 id=\"jobs命令和-fg命令\"><a class=\"anchor\" href=\"#jobs命令和-fg命令\">#</a> jobs 命令和 fg 命令：</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">jobs</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//那么就会列出所有后台执行的作业，并且每个作业前面都有个编号。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//如果想将某个作业调回前台控制，只需要 <span class=\"token function\">fg</span> + 编号即可。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">fg</span> <span class=\"token number\">2</span></pre></td></tr></table></figure><h3 id=\"查看某端口占用的线程的pid\"><a class=\"anchor\" href=\"#查看某端口占用的线程的pid\">#</a> 查看某端口占用的线程的 pid</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">netstat</span> -nlp <span class=\"token operator\">|</span><span class=\"token function\">grep</span> :8080</pre></td></tr></table></figure><h3 id=\"出现nohup-ignoring-input-and-redirecting-stderr-to-stdout\"><a class=\"anchor\" href=\"#出现nohup-ignoring-input-and-redirecting-stderr-to-stdout\">#</a> 出现：nohup: ignoring input and redirecting stderr to stdout</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nohup</span> java -jar test.jar <span class=\"token operator\">></span> temp.txt <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>改成</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">nohup</span> java -jar test.jar <span class=\"token operator\">></span> temp.txt <span class=\"token number\">2</span> <span class=\"token operator\">>&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><h3 id=\"解决linux环境下nohup-redirecting-stderr-to-stdout问题\"><a class=\"anchor\" href=\"#解决linux环境下nohup-redirecting-stderr-to-stdout问题\">#</a> 解决 linux 环境下 nohup: redirecting stderr to stdout 问题</h3>\n<ul>\n<li>我的启动命令是这样的：</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nohup</span> bin/startManagedServer.sh myserver htp://192.168.0.1 -Xms2048m -Xmx2048m <span class=\"token operator\">></span> logs/myserver.out <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><ul>\n<li>现在指行这个命令，会给我产生两个文件，一个中 logs/myserver.out，另一个是 nohup.out 文件。 怎样才能让它不产生 nohup.out 文件呢。 网上搜了半天，据说好像可以把后面的 “&amp;” 改成 “2&gt;&amp;1 &amp;”，于是把启动命令改成如下：</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nohup</span> bin/startManagedServer.sh myserver htp://192.168.0.1 -Xms2048m -Xmx2048m <span class=\"token operator\">></span> logs/myserver.out <span class=\"token number\">2</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><ul>\n<li>再次执行，问题解决。</li>\n</ul>\n<p><strong>解释如下：</strong></p>\n<blockquote>\n<p>2&gt; 表示把标准错误 (stderr) 重定向，标准输出 (stdout) 是 1。 尖括号后面可以跟文件名，或者是 &amp; 1, &amp;2，分别表示重定向到标准输出和标准错误。</p>\n</blockquote>\n<p><strong>2&gt; &amp;1 1&gt; &amp;2 2&gt; stderr.log 1&gt; stdout.log</strong></p>\n",
            "tags": [
                "bug",
                "linux"
            ]
        },
        {
            "id": "https://isviolet.github.io/p/c48cc324.html",
            "url": "https://isviolet.github.io/p/c48cc324.html",
            "title": "Content type 'multipartform-data;boundary=.. WebKitFormBoundary..;charset=UTF-8' not supported",
            "date_published": "2021-05-18T12:17:20.717Z",
            "content_html": "<blockquote>\n<p>说下场景吧，前端一个订单表单，填好相应的表单信息封装成 json 数据上传，并且附带上传一个 Excel 文件，同一个接口提交到后端，想着后端代码通过实体接收 json 数据，然后解析接收到的 excel 文件，然而 这么基础的 http 请求头类型的问题坑了自己 (对象实体和文件是不同类型的数据，同一个接口提交，用 Content-Type: multipart/form-data 是解析不了我的 json 参数的)</p>\n</blockquote>\n<h3 id=\"请求体\"><a class=\"anchor\" href=\"#请求体\">#</a> 请求体</h3>\n<p><img data-src=\"https://i.loli.net/2021/05/18/bm48RUHLOj9X63c.png\" alt=\"file\" /></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>curl -X POST --header 'Content-Type<span class=\"token operator\">:</span> multipart/form-data' --header 'Accept<span class=\"token operator\">:</span> application/json' -d '<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"customerId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CU43531977852501\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"endTime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-04 16:53:34\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"flowStrategy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"orderName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"测试1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"pdCode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1111111\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">\"sourceUrls\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">\"startTime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-04-03 16:53:34\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">\"targetUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span>' 'http<span class=\"token operator\">:</span><span class=\"token comment\">//localhost:8081/order/batchByExcel'</span></pre></td></tr></table></figure><h3 id=\"返回响应数据\"><a class=\"anchor\" href=\"#返回响应数据\">#</a> 返回响应数据</h3>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span> <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"PARAM_WRONG\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Content type 'multipart/form-data;boundary=----WebKitFormBoundaryW25LVTHs8WCBZUfG;charset=UTF-8' not supported\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"dataObject\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"下面是报错相关代码\"><a class=\"anchor\" href=\"#下面是报错相关代码\">#</a> 下面是报错相关代码</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/batchByExcel\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">BaseResponse</span> <span class=\"token function\">createBatchOrders</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@ApiParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上传文件\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileName\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                                      <span class=\"token annotation punctuation\">@Valid</span> <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">CreateBatchOrderReq</span> req<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//codes...</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"解决方法是将上面的一个接口拆分成两个解决方法是将上面的一个接口拆分成两个\"><a class=\"anchor\" href=\"#解决方法是将上面的一个接口拆分成两个解决方法是将上面的一个接口拆分成两个\">#</a> 解决方法是，将上面的一个接口拆分成两个：解决方法是，将上面的一个接口拆分成两个：</h4>\n<ul>\n<li>一个接收文件，保存文件到本地或者其他服务器，返回一个文件编码或者文件地址；</li>\n<li>一个接口接收 json 数据，json 参数中包含文件编码或者地址，根据编码或地址找到文件进行后续的数据操作。</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/batchFile\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">BaseResponse</span> <span class=\"token function\">uploadBatchFile</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@ApiParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上传文件\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileName\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">//codes...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/batch\"</span><span class=\"token punctuation\">)</span><span class=\"token annotation punctuation\">@ApiOperation</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"新增批量订单(需要先导入excel)\"</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token class-name\">BaseResponse</span> <span class=\"token function\">createBatchOrders</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Valid</span> <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">CreateBatchOrderReq</span> req<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//codes…&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><img data-src=\"https://i.loli.net/2021/05/18/WLFsnoERKYCydO9.png\" alt=\"file\" /> <img data-src=\"https://i.loli.net/2021/05/18/CbqcpPGQJr2YsTw.png\" alt=\"file\" /> <img data-src=\"https://i.loli.net/2021/05/18/Te12rDxCGf6NjK3.png\" alt=\"file\" /></p>\n</blockquote>\n",
            "tags": [
                "springboot",
                "bug"
            ]
        }
    ]
}