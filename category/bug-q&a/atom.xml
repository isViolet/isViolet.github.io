<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://isviolet.github.io</id>
    <title>友人帐🎴 • Posts by &#34;bug-q&amp;a&#34; category</title>
    <link href="https://isviolet.github.io" />
    <updated>2021-05-18T12:26:15.289Z</updated>
    <category term="随文" />
    <category term="Android" />
    <category term="JAVAWEB" />
    <category term="unity3D" />
    <category term="springboot" />
    <category term="HTTP" />
    <category term="bug" />
    <category term="linux" />
    <category term="python" />
    <category term="爬虫" />
    <category term="栈" />
    <category term="危机合约" />
    <category term="明日方舟" />
    <category term="游戏" />
    <category term="线性表" />
    <category term="JAVA" />
    <category term="JAVA开发手册" />
    <category term="数据库" />
    <entry>
        <id>https://isviolet.github.io/p/4d2c3dcc.html</id>
        <title>linux运行jar、nohup ignoring input and redirecting stderr to stdout</title>
        <link rel="alternate" href="https://isviolet.github.io/p/4d2c3dcc.html"/>
        <content type="html">&lt;h3 id=&#34;在linux服务器上运行jar文件时通常的方法是&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在linux服务器上运行jar文件时通常的方法是&#34;&gt;#&lt;/a&gt; 在 linux 服务器上运行 Jar 文件时通常的方法是：&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ java -jar test.jar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//这种方式特点是ssh窗口关闭时，程序中止运行.或者是运行时没法切出去执行其他任务&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;jar在后台运行的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jar在后台运行的方法&#34;&gt;#&lt;/a&gt; jar 在后台运行的方法：&lt;/h3&gt;
&lt;h4 id=&#34;方法一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法一&#34;&gt;#&lt;/a&gt; 方法一：&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;nohup&lt;/span&gt; java -jar test.jar &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//nohup 意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//当用 &lt;span class=&#34;token function&#34;&gt;nohup&lt;/span&gt; 命令执行作业时，缺省情况下该作业的所有输出被重定向到nohup.out的文件中&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//除非另外指定了输出文件。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;方法二&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法二&#34;&gt;#&lt;/a&gt; 方法二：&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;nohup&lt;/span&gt; java -jar test.jar &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; temp.txt &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//这种方法会把日志文件输入到你指定的文件中，没有则会自动创建&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;jobs命令和-fg命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jobs命令和-fg命令&#34;&gt;#&lt;/a&gt; jobs 命令和 fg 命令：&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;jobs&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//那么就会列出所有后台执行的作业，并且每个作业前面都有个编号。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//如果想将某个作业调回前台控制，只需要 &lt;span class=&#34;token function&#34;&gt;fg&lt;/span&gt; + 编号即可。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ &lt;span class=&#34;token function&#34;&gt;fg&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;查看某端口占用的线程的pid&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看某端口占用的线程的pid&#34;&gt;#&lt;/a&gt; 查看某端口占用的线程的 pid&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;netstat&lt;/span&gt; -nlp &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;grep&lt;/span&gt; :8080&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;出现nohup-ignoring-input-and-redirecting-stderr-to-stdout&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#出现nohup-ignoring-input-and-redirecting-stderr-to-stdout&#34;&gt;#&lt;/a&gt; 出现：nohup: ignoring input and redirecting stderr to stdout&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;nohup&lt;/span&gt; java -jar test.jar &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; temp.txt &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;改成&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;nohup&lt;/span&gt; java -jar test.jar &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; temp.txt &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;解决linux环境下nohup-redirecting-stderr-to-stdout问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决linux环境下nohup-redirecting-stderr-to-stdout问题&#34;&gt;#&lt;/a&gt; 解决 linux 环境下 nohup: redirecting stderr to stdout 问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;我的启动命令是这样的：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;nohup&lt;/span&gt; bin/startManagedServer.sh myserver htp://192.168.0.1 -Xms2048m -Xmx2048m &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; logs/myserver.out &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;现在指行这个命令，会给我产生两个文件，一个中 logs/myserver.out，另一个是 nohup.out 文件。 怎样才能让它不产生 nohup.out 文件呢。 网上搜了半天，据说好像可以把后面的 “&amp;amp;” 改成 “2&amp;gt;&amp;amp;1 &amp;amp;”，于是把启动命令改成如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;nohup&lt;/span&gt; bin/startManagedServer.sh myserver htp://192.168.0.1 -Xms2048m -Xmx2048m &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; logs/myserver.out &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;再次执行，问题解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解释如下：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2&amp;gt; 表示把标准错误 (stderr) 重定向，标准输出 (stdout) 是 1。 尖括号后面可以跟文件名，或者是 &amp;amp; 1, &amp;amp;2，分别表示重定向到标准输出和标准错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2&amp;gt; &amp;amp;1 1&amp;gt; &amp;amp;2 2&amp;gt; stderr.log 1&amp;gt; stdout.log&lt;/strong&gt;&lt;/p&gt;
</content>
        <category term="bug" />
        <category term="linux" />
        <updated>2021-05-18T12:26:15.289Z</updated>
    </entry>
</feed>
