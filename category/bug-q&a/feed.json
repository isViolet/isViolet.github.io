{
    "version": "https://jsonfeed.org/version/1",
    "title": "友人帐 • All posts by \"bug-q&a\" category",
    "description": "",
    "home_page_url": "https://isviolet.github.io",
    "items": [
        {
            "id": "https://isviolet.github.io/p/4d2c3dcc.html",
            "url": "https://isviolet.github.io/p/4d2c3dcc.html",
            "title": "linux运行jar、nohup ignoring input and redirecting stderr to stdout",
            "date_published": "2021-05-18T12:26:15.289Z",
            "content_html": "<h3 id=\"在linux服务器上运行jar文件时通常的方法是\"><a class=\"anchor\" href=\"#在linux服务器上运行jar文件时通常的方法是\">#</a> 在 linux 服务器上运行 Jar 文件时通常的方法是：</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ java -jar test.jar</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//这种方式特点是ssh窗口关闭时，程序中止运行.或者是运行时没法切出去执行其他任务</pre></td></tr></table></figure><h3 id=\"jar在后台运行的方法\"><a class=\"anchor\" href=\"#jar在后台运行的方法\">#</a> jar 在后台运行的方法：</h3>\n<h4 id=\"方法一\"><a class=\"anchor\" href=\"#方法一\">#</a> 方法一：</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">nohup</span> java -jar test.jar <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//nohup 意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//当用 <span class=\"token function\">nohup</span> 命令执行作业时，缺省情况下该作业的所有输出被重定向到nohup.out的文件中</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//除非另外指定了输出文件。</pre></td></tr></table></figure><h4 id=\"方法二\"><a class=\"anchor\" href=\"#方法二\">#</a> 方法二：</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">nohup</span> java -jar test.jar <span class=\"token operator\">></span> temp.txt <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//这种方法会把日志文件输入到你指定的文件中，没有则会自动创建</pre></td></tr></table></figure><h3 id=\"jobs命令和-fg命令\"><a class=\"anchor\" href=\"#jobs命令和-fg命令\">#</a> jobs 命令和 fg 命令：</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">jobs</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>//那么就会列出所有后台执行的作业，并且每个作业前面都有个编号。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//如果想将某个作业调回前台控制，只需要 <span class=\"token function\">fg</span> + 编号即可。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">fg</span> <span class=\"token number\">2</span></pre></td></tr></table></figure><h3 id=\"查看某端口占用的线程的pid\"><a class=\"anchor\" href=\"#查看某端口占用的线程的pid\">#</a> 查看某端口占用的线程的 pid</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">netstat</span> -nlp <span class=\"token operator\">|</span><span class=\"token function\">grep</span> :8080</pre></td></tr></table></figure><h3 id=\"出现nohup-ignoring-input-and-redirecting-stderr-to-stdout\"><a class=\"anchor\" href=\"#出现nohup-ignoring-input-and-redirecting-stderr-to-stdout\">#</a> 出现：nohup: ignoring input and redirecting stderr to stdout</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nohup</span> java -jar test.jar <span class=\"token operator\">></span> temp.txt <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>改成</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">nohup</span> java -jar test.jar <span class=\"token operator\">></span> temp.txt <span class=\"token number\">2</span> <span class=\"token operator\">>&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><h3 id=\"解决linux环境下nohup-redirecting-stderr-to-stdout问题\"><a class=\"anchor\" href=\"#解决linux环境下nohup-redirecting-stderr-to-stdout问题\">#</a> 解决 linux 环境下 nohup: redirecting stderr to stdout 问题</h3>\n<ul>\n<li>我的启动命令是这样的：</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nohup</span> bin/startManagedServer.sh myserver htp://192.168.0.1 -Xms2048m -Xmx2048m <span class=\"token operator\">></span> logs/myserver.out <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><ul>\n<li>现在指行这个命令，会给我产生两个文件，一个中 logs/myserver.out，另一个是 nohup.out 文件。 怎样才能让它不产生 nohup.out 文件呢。 网上搜了半天，据说好像可以把后面的 “&amp;” 改成 “2&gt;&amp;1 &amp;”，于是把启动命令改成如下：</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nohup</span> bin/startManagedServer.sh myserver htp://192.168.0.1 -Xms2048m -Xmx2048m <span class=\"token operator\">></span> logs/myserver.out <span class=\"token number\">2</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span></pre></td></tr></table></figure><ul>\n<li>再次执行，问题解决。</li>\n</ul>\n<p><strong>解释如下：</strong></p>\n<blockquote>\n<p>2&gt; 表示把标准错误 (stderr) 重定向，标准输出 (stdout) 是 1。 尖括号后面可以跟文件名，或者是 &amp; 1, &amp;2，分别表示重定向到标准输出和标准错误。</p>\n</blockquote>\n<p><strong>2&gt; &amp;1 1&gt; &amp;2 2&gt; stderr.log 1&gt; stdout.log</strong></p>\n",
            "tags": [
                "bug",
                "linux"
            ]
        }
    ]
}