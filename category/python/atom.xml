<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://isviolet.github.io</id>
    <title>友人帐🎴 • Posts by &#34;python&#34; category</title>
    <link href="https://isviolet.github.io" />
    <updated>2021-05-18T13:18:19.660Z</updated>
    <category term="随文" />
    <category term="JAVAWEB" />
    <category term="Android" />
    <category term="unity3D" />
    <category term="springboot" />
    <category term="bug" />
    <category term="linux" />
    <category term="HTTP" />
    <category term="python" />
    <category term="爬虫" />
    <category term="栈" />
    <category term="线性表" />
    <category term="JAVA" />
    <category term="危机合约" />
    <category term="明日方舟" />
    <category term="游戏" />
    <category term="JAVA开发手册" />
    <category term="数据库" />
    <entry>
        <id>https://isviolet.github.io/p/8aff4f2e.html</id>
        <title>爬虫概念、工具和HTTP</title>
        <link rel="alternate" href="https://isviolet.github.io/p/8aff4f2e.html"/>
        <content type="html">&lt;ul&gt;
&lt;li&gt;什么是爬虫
&lt;ul&gt;
&lt;li&gt;爬虫就是模拟客户端 (浏览器) 发送网络请求，获取响应，按照规则提取数据的程序&lt;/li&gt;
&lt;li&gt;模拟客户端 (浏览器) 发送网络请求：照着浏览器发送一模一样的请求，获取和浏览器一模一样的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;爬虫的数据去哪了
&lt;ul&gt;
&lt;li&gt;呈现出来：展示在网页上，或者是展示在 app 上&lt;/li&gt;
&lt;li&gt;进行分析：从数据中寻找一些规律&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;需要的软件和环境
&lt;ul&gt;
&lt;li&gt;python3
&lt;ul&gt;
&lt;li&gt;黑马 python 基础班 15 天视频: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3l1bi5pdGhlaW1hLmNvbS9jb3Vyc2UvMjE0Lmh0bWw=&#34;&gt;http://yun.itheima.com/course/214.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;基础语法 (字符串，列表，字典，判断和循环)&lt;/li&gt;
&lt;li&gt;函数 (函数的创建和调用)&lt;/li&gt;
&lt;li&gt;面向对象 (如何创建一个类， 如何使用这个类)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;pyCharm
&lt;ul&gt;
&lt;li&gt;python 编辑器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;chrome 浏览器
&lt;ul&gt;
&lt;li&gt;分析网络请求用的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;浏览器的请求
&lt;ul&gt;
&lt;li&gt;url
&lt;ul&gt;
&lt;li&gt;在 chrome 中点击检查，点到 network&lt;/li&gt;
&lt;li&gt;url= 请求的协议 + 网站的域名 + 资源的路径 + 参数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;浏览器请求 url 地址
&lt;ul&gt;
&lt;li&gt;当前 url 对应的响应 + js+CSS + 图片 --&amp;gt; elements 中的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;爬虫请求 url 地址
&lt;ul&gt;
&lt;li&gt;当前 url 对应的响应&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;elements 的内容和爬虫获取到的 ur 地址的响应不同，爬虫中需要以当前 url 地址对应的响应为准提取数据&lt;/li&gt;
&lt;li&gt;当前 url 地址对应的响应在哪里
&lt;ul&gt;
&lt;li&gt;从 network 中找到当前的 ur 地址，点击 response&lt;/li&gt;
&lt;li&gt;在页面上右键显示网页源码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="python" />
        <category term="爬虫" />
        <updated>2021-05-18T13:18:19.660Z</updated>
    </entry>
</feed>
