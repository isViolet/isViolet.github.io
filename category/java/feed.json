{
    "version": "https://jsonfeed.org/version/1",
    "title": "友人帐🎴 • All posts by \"java\" category",
    "description": "",
    "home_page_url": "https://isviolet.github.io",
    "items": [
        {
            "id": "https://isviolet.github.io/p/0.html",
            "url": "https://isviolet.github.io/p/0.html",
            "title": "",
            "date_published": "2022-03-05T12:35:18.111Z",
            "content_html": "<h2 id=\"java语言概述\"><a class=\"anchor\" href=\"#java语言概述\">#</a> java 语言概述</h2>\n<p>Java 是 sun 公司开发的一门编程语言，目前被 Oracle 公司收购，编程语言就是用来编写软件的。</p>\n<h3 id=\"java的应用\"><a class=\"anchor\" href=\"#java的应用\">#</a> Java 的应用</h3>\n<ul>\n<li>开发 QQ、迅雷程序 (桌面应用软件)</li>\n<li>淘宝、京东 (互联网应用软件)</li>\n<li>安卓应用程序</li>\n</ul>\n<h3 id=\"java的擅长\"><a class=\"anchor\" href=\"#java的擅长\">#</a> Java 的擅长</h3>\n<ul>\n<li>互联网：电商、P2P 等等</li>\n<li>企业级应用：ERP、CRM、BOS、OA 等等</li>\n</ul>\n<h3 id=\"java语言平台\"><a class=\"anchor\" href=\"#java语言平台\">#</a> Java 语言平台</h3>\n<ul>\n<li>JavaSE（标准版）部分，JavaSE 并不能开发大型项目。</li>\n<li>JavaEE（企业版）部分，学习完 JavaEE 部分就可以开发各种大型项目了。</li>\n</ul>\n<h2 id=\"java语言开发环境\"><a class=\"anchor\" href=\"#java语言开发环境\">#</a> java 语言开发环境</h2>\n<p>JDK 是 Java 开发环境，官网 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vcmFjbGUuY29tL2NuL2luZGV4Lmh0bWw=\">http://www.oracle.com/cn/index.html</span></p>\n<h3 id=\"jdk的安装\"><a class=\"anchor\" href=\"#jdk的安装\">#</a> JDK 的安装</h3>\n<p>傻瓜式安装，双击安装程序，然后一路 next 即可，安装的推荐方式：</p>\n<ul>\n<li>安装路径不要有中文或者特殊符号如空格等。</li>\n<li>所有和开发相关的软件最好安装目录统一。</li>\n<li>当提示安装 JRE 时，可以选择不安装。建议还是安装上。</li>\n</ul>\n<p>验证安装是否成功，通过 DOS 命令，切换到 JDK 安装的 bin 目录下。比如  <code>D:\\develop\\Java\\jdk1.7.0_72\\bin</code> ，然后分别输入 javac 和 java，如果正常显示一些内容，说明安装成功。</p>\n<h3 id=\"配置环境变量\"><a class=\"anchor\" href=\"#配置环境变量\">#</a> 配置环境变量</h3>\n<p>环境变量的作用：由于 javac 和 java 命令只能在固定的目录下才能执行，而我们写的代码如果都和 javac 及 java 命令放在相同的目录中的话，会显得很乱”，为了让 Java 的 bin 目录下的 javac 命令可以在任意目录下执行，就得配置环境变量。</p>\n<p>具体安装参考：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9CZWxpZWZsZWUvcC80Nzc4MzE1Lmh0bWw=\">JAVA 开发环境的搭建（配置 JAVA 开发环境）</span></p>\n<p><strong>JDK 和 JRE 以及跨平台</strong></p>\n<p>JDK 与 JRE 的关系</p>\n<ul>\n<li>JDK：Java Development Kit ，Java 语言的开发工具包，提供了 Java 语言的开发工具，它里面包含了 JRE，同时也就包含了 JVM（Java 虚拟机）。</li>\n<li>JRE：Java Runtime Environment，它是 Java 运行环境，如果你不需要开发只需要运行 Java 程序，那么你可以安装 JRE。例如程序员开发出的程序最终卖给了用户，用户不用开发，只需要运行程序，所以用户在电脑上安装 JRE 即可。它包含了 Java 虚拟机，也就是 JVM，同时还包含了 Java 语言运行需要的核心类库。</li>\n</ul>\n<p>跨平台特性：平台指的是操作系统 （Windows，Linux，Mac）。只需在相应的平台上安装 Java 虚拟机，就可以运行 Java 程序。</p>\n<h2 id=\"使用intellij-idea打印hello-world\"><a class=\"anchor\" href=\"#使用intellij-idea打印hello-world\">#</a> 使用 IntelliJ IDEA 打印 Hello World</h2>\n<h3 id=\"第一步创建新项目\"><a class=\"anchor\" href=\"#第一步创建新项目\">#</a> 第一步：创建新项目</h3>\n<p><img data-src=\"https://guli77.oss-cn-beijing.aliyuncs.com/blog_img/612774-20170701211232211-2109811476.png\" alt=\"img\" /></p>\n<h3 id=\"第二步选择jdk然后next\"><a class=\"anchor\" href=\"#第二步选择jdk然后next\">#</a> 第二步：选择 jdk，然后 next</h3>\n<p><img data-src=\"https://guli77.oss-cn-beijing.aliyuncs.com/blog_img/612774-20170701211457883-150724723.png\" alt=\"img\" /></p>\n<h3 id=\"第三步选择hello-world模板然后next\"><a class=\"anchor\" href=\"#第三步选择hello-world模板然后next\">#</a> 第三步：选择 Hello World 模板，然后 Next</h3>\n<p><img data-src=\"https://guli77.oss-cn-beijing.aliyuncs.com/blog_img/612774-20170701211626743-101552981.png\" alt=\"img\" /></p>\n<h3 id=\"第四步输入项目名称然后finish\"><a class=\"anchor\" href=\"#第四步输入项目名称然后finish\">#</a> 第四步：输入项目名称，然后 Finish</h3>\n<p><img data-src=\"https://guli77.oss-cn-beijing.aliyuncs.com/blog_img/612774-20170701211759305-689114650.png\" alt=\"img\" /></p>\n<h3 id=\"第五步运行\"><a class=\"anchor\" href=\"#第五步运行\">#</a> 第五步：运行</h3>\n<p><img data-src=\"https://guli77.oss-cn-beijing.aliyuncs.com/blog_img/612774-20170701211901883-623625448.png\" alt=\"img\" /></p>\n<h3 id=\"第六步查看结果\"><a class=\"anchor\" href=\"#第六步查看结果\">#</a> 第六步：查看结果</h3>\n<p><img data-src=\"https://guli77.oss-cn-beijing.aliyuncs.com/blog_img/612774-20170701211940899-68699482.png\" alt=\"img\" /></p>\n<h2 id=\"java代码的编写执行过程\"><a class=\"anchor\" href=\"#java代码的编写执行过程\">#</a> Java 代码的编写执行过程</h2>\n<p>源文件：编写 Java 源文件（我们也称之为源代码文件），它的扩展名为.java；</p>\n<p>编译：然后通过编译器把源文件编译成字节码文件，字节码文件扩展名为.class；</p>\n<p>运行：最后使用解释器来运行字节码文件。</p>\n<h2 id=\"centos7下java8安装\"><a class=\"anchor\" href=\"#centos7下java8安装\">#</a> CentOS7 下 Java8 安装</h2>\n<ol>\n<li>\n<p>到 https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 找到 jdk-8u221-linux-x64.tar.gz 的下载地址，需要登录。</p>\n</li>\n<li>\n<p>打开终端，使用 wget 命令下载。比如：wget <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5vcmFjbGUuY29tL290bi9qYXZhL2pkay84dTIyMS1iMTEvMjMwZGViMThkYjNlNDAxNGJiOGUzZTgzMjRmODFiNDMvamRrLTh1MjIxLWxpbnV4LXg2NC50YXIuZ3o/QXV0aFBhcmFtPTE1Njk2NDE1MzBfMDVjNjk5YTAwYWMyYWZlMGMwZGRlN2NjNTc4NGU0ZDU=\">https://download.oracle.com/otn/java/jdk/8u221-b11/230deb18db3e4014bb8e3e8324f81b43/jdk-8u221-linux-x64.tar.gz?AuthParam=1569641530_05c699a00ac2afe0c0dde7cc5784e4d5</span></p>\n</li>\n<li>\n<p>解压，tar -xzvf jdk-8u221-linux-x64.tar.gz?AuthParam=1569641530_05c699a00ac2afe0c0dde7cc5784e4d5</p>\n</li>\n<li>\n<p>移动到 /usr/local 目录下，mv jdk-8u221-linux-x64.tar.gz?AuthParam=1569641530_05c699a00ac2afe0c0dde7cc5784e4d5 /opt/usr</p>\n</li>\n<li>\n<p>切换到 opt 目录下，cd /opt/usr</p>\n</li>\n<li>\n<p>改名为 java8，mv jdk-8u221-linux-x64.tar.gz?AuthParam=1569641530_05c699a00ac2afe0c0dde7cc5784e4d5 java8</p>\n</li>\n<li>\n<p>配置环境变量，vi /etc/profile, 在文件后面追加以下代码：</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/usr/local/java8</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">JRE_HOME</span><span class=\"token operator\">=</span>/usr/local/java8/jre</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$JAVA_HOME</span>/bin:<span class=\"token variable\">$JRE_HOME</span>/bin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">CLASSPATH</span><span class=\"token operator\">=</span>.:<span class=\"token variable\">$JAVA_HOME</span>/lib/dt.jar:<span class=\"token variable\">$JAVA_HOME</span>/lib/tools.jar:<span class=\"token variable\">$JRE_HOME</span>/lib</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">export</span> JAVA_HOME JRE_HOME <span class=\"token environment constant\">PATH</span> CLASSPATH</pre></td></tr></table></figure><ol start=\"8\">\n<li>执行 source /etc/profile 命令使配置生效，到这一步就算安装完成了，使用 java -version 查看安装是否成功。</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "https://isviolet.github.io/p/f5608694.html",
            "url": "https://isviolet.github.io/p/f5608694.html",
            "title": "java获取网络图片的宽和高",
            "date_published": "2021-05-18T12:24:25.051Z",
            "content_html": "<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 获取网络图片的宽和高</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * @param url</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getWidthAndHeight</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">InputStream</span> is <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">openStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\">BufferedImage</span> sourceImg <span class=\"token operator\">=</span> <span class=\"token class-name\">ImageIO</span><span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> sourceImg<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> sourceImg<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> width<span class=\"token operator\">+</span><span class=\"token string\">\"*\"</span><span class=\"token operator\">+</span>height<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取图片宽高失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "JAVA"
            ]
        },
        {
            "id": "https://isviolet.github.io/p/518e9178.html",
            "url": "https://isviolet.github.io/p/518e9178.html",
            "title": "Java 基础语法",
            "date_published": "2021-05-18T12:10:29.874Z",
            "content_html": "<h3 id=\"java-基础语法\"><a class=\"anchor\" href=\"#java-基础语法\">#</a> Java 基础语法</h3>\n<p>一个 Java 程序可以认为是一系列对象的集合，而这些对象通过调用彼此的方法来协同工作。下面简要介绍下类、对象、方法和实例变量的概念。</p>\n<ul>\n<li>对象：<strong>对象是类的一个实例</strong>，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。</li>\n<li>类：类是一个<strong>模板</strong>，它描述一类对象的行为和状态。</li>\n<li>方法：<strong>方法就是行为</strong>，一个类可以有很多方法。逻辑运算、数据修改以及所有动作都是在方法中完成的。</li>\n<li>实例变量：每个<strong>对象都有独特的实例变量</strong>，对象的状态由这些<strong>实例变量的值</strong>决定。</li>\n</ul>\n<h3 id=\"第一个java程序\"><a class=\"anchor\" href=\"#第一个java程序\">#</a> 第一个 Java 程序</h3>\n<p>下面看一个简单的 Java 程序，它将打印字符串 Hello World</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/* 第一个 Java 程序</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * 它将打印字符串 Hello World</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印 Hello World</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"基本语法\"><a class=\"anchor\" href=\"#基本语法\">#</a> 基本语法</h3>\n<p>编写 Java 程序时，应注意以下几点：</p>\n<ul>\n<li><strong>大小写敏感</strong>：Java 是大小写敏感的，这就意味着标识符 Hello 与 hello 是不同的。</li>\n<li>类名：对于所有的类来说，<strong>类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 MyFirstJavaClass</strong> 。</li>\n<li>方法名：<strong>所有的方法名都应该以小写字母开头</strong>。<strong>如果方法名含有若干单词，则后面的每个单词首字母大写。</strong></li>\n<li>源文件名：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 .java。（如果文件名和类名不相同则会导致编译错误）。</li>\n<li>主方法入口：所有的 Java 程序由 public static void main (String [] args) 方法开始执行。</li>\n</ul>\n<h3 id=\"java-标识符\"><a class=\"anchor\" href=\"#java-标识符\">#</a> Java 标识符</h3>\n<p>Java 所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。</p>\n<p>关于 Java 标识符，有以下几点需要注意：</p>\n<ul>\n<li>所有的标识符都应该以字母（A-Z 或者 a-z）, 美元符（$）、或者下划线（_）开始</li>\n<li>首字符之后可以是字母（A-Z 或者 a-z）, 美元符（$）、下划线（_）或数字的任何字符组合</li>\n<li>关键字不能用作标识符</li>\n<li>标识符是大小写敏感的</li>\n<li>合法标识符举例：age、$salary、_value、__1_value</li>\n<li>非法标识符举例：123abc、-salary</li>\n</ul>\n<h3 id=\"java修饰符\"><a class=\"anchor\" href=\"#java修饰符\">#</a> Java 修饰符</h3>\n<p>像其他语言一样，Java 可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：</p>\n<ul>\n<li>访问控制修饰符 : default, public , protected, private</li>\n<li>非访问控制修饰符 : final, abstract, static, synchronized</li>\n</ul>\n<h3 id=\"java-变量\"><a class=\"anchor\" href=\"#java-变量\">#</a> Java 变量</h3>\n<p>java 中主要有如下几种类型的变量</p>\n<ul>\n<li>局部变量</li>\n<li>类变量（静态变量）</li>\n<li>成员变量（非静态变量）</li>\n</ul>\n<h3 id=\"java-数组\"><a class=\"anchor\" href=\"#java-数组\">#</a> Java 数组</h3>\n<p>数组是储存在堆上的对象，可以保存多个同类型变量。在后面的章节中，我们将会学到如何声明、构造以及初始化一个数组。</p>\n<h3 id=\"java-枚举\"><a class=\"anchor\" href=\"#java-枚举\">#</a> Java 枚举</h3>\n<p>Java 5.0 引入了枚举，枚举限制变量只能是预先设定好的值。使用枚举可以减少代码中的 bug。</p>\n<p>例如，我们为果汁店设计一个程序，它将限制果汁为小杯、中杯、大杯。这就意味着它不允许顾客点除了这三种尺寸外的果汁。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FreshJuice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">enum</span> <span class=\"token class-name\">FreshJuiceSize</span><span class=\"token punctuation\">&#123;</span> SMALL<span class=\"token punctuation\">,</span> MEDIUM <span class=\"token punctuation\">,</span> LARGE <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token class-name\">FreshJuiceSize</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FreshJuiceTest</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token class-name\">FreshJuice</span> juice <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FreshJuice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> juice<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token class-name\">FreshJuice<span class=\"token punctuation\">.</span>FreshJuiceSize</span><span class=\"token punctuation\">.</span>MEDIUM <span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意：枚举可以单独声明或者声明在类里面。方法、变量、构造函数也可以在枚举中定义。</p>\n<h3 id=\"java-关键字\"><a class=\"anchor\" href=\"#java-关键字\">#</a> Java 关键字</h3>\n<p>下面列出了 Java 关键字。这些保留字不能用于常量、变量、和任何标识符的名称。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类别</th>\n<th style=\"text-align:center\">关键字</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">访问控制</td>\n<td style=\"text-align:center\">private</td>\n<td style=\"text-align:center\">私有的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">protected</td>\n<td style=\"text-align:center\">受保护的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">public</td>\n<td style=\"text-align:center\">公共的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">default</td>\n<td style=\"text-align:center\">默认</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">类、方法和变量修饰符</td>\n<td style=\"text-align:center\">abstract</td>\n<td style=\"text-align:center\">声明抽象</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"java注释\"><a class=\"anchor\" href=\"#java注释\">#</a> Java 注释</h3>\n<p>类似于 C/C++、Java 也支持单行以及多行注释。注释中的字符将被 Java 编译器忽略。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">/* 这是第一个 Java 程序</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * 它将打印 Hello World</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    * 这是一个多行注释的示例</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token comment\">// 这是单行注释的示例</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token comment\">/* 这个也是单行注释的示例 */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"java-空行\"><a class=\"anchor\" href=\"#java-空行\">#</a> Java 空行</h3>\n<p>空白行或者有注释的行，Java 编译器都会忽略掉。</p>\n<h3 id=\"继承\"><a class=\"anchor\" href=\"#继承\">#</a> 继承</h3>\n<p>在 Java 中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类。</p>\n<p>利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（super class），派生类称为子类（subclass）。</p>\n<h3 id=\"接口\"><a class=\"anchor\" href=\"#接口\">#</a> 接口</h3>\n<p>在 Java 中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。</p>\n<p>接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。</p>\n<h3 id=\"java-源程序与编译型运行区别\"><a class=\"anchor\" href=\"#java-源程序与编译型运行区别\">#</a> Java 源程序与编译型运行区别</h3>\n<p><img data-src=\"https://i.loli.net/2021/05/18/9tewhnfaI18sz6S.jpg\" alt=\"img\" /></p>\n",
            "tags": [
                "JAVA"
            ]
        }
    ]
}